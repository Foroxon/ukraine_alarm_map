name: üöÄ Release Firmware
on:
  workflow_dispatch:
    inputs:
        release-version:
          description: 'Release version'
          required: true
          type: string
        release-title:
          description: 'Release title'
          required: true
          type: string
run-name: Release ${{ inputs.release-version }} (${{ inputs.release-title }})
jobs:
  build:
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Replace version in firmware source
        run: |
          sed -i 's/VERSION = ".*";/VERSION = "${{ inputs.release-version }}";/' ${{ github.workspace }}/src/firmware/firmware.ino
      - name: Compile firmware
        uses: ./.github/workflows/firmware-compile
      - name: Copy bin to upload
        run: |
          cp -f ${{ github.workspace }}/src/firmware/build/esp32.esp32.esp32/firmware.ino.bin ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin
      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: JAAM_${{ inputs.release-version }}.bin
          path: ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin
  build_lite:
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Replace version and build type in firmware source
        run: |
          sed -i 's/VERSION = ".*";/VERSION = "${{ inputs.release-version }}";/' ${{ github.workspace }}/src/firmware/firmware.ino
          sed -i 's/#define LITE ./#define LITE 1/' ${{ github.workspace }}/src/firmware/firmware.ino
      - name: Compile firmware
        uses: ./.github/workflows/firmware-compile
      - name: Copy bin to upload
        run: |
          cp -f ${{ github.workspace }}/src/firmware/build/esp32.esp32.esp32/firmware.ino.bin ${{ github.workspace }}/JAAM_${{ inputs.release-version }}_lite.bin
      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: JAAM_${{ inputs.release-version }}_lite.bin
          path: ${{ github.workspace }}/JAAM_${{ inputs.release-version }}_lite.bin
  release_firmware:
    needs: [build, build_lite]
    runs-on: ubuntu-latest
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: write
    #   pages: write
    #   id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Replace version in firmware source
        run: |
          sed -i 's/VERSION = ".*";/VERSION = "${{ inputs.release-version }}";/' ${{ github.workspace }}/src/firmware/firmware.ino
      - name: Download firmware
        uses: actions/download-artifact@v4
        with:
          name: JAAM_${{ inputs.release-version }}.bin
          path: ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin
      - name: Download firmware lite
        uses: actions/download-artifact@v4
        with:
          name: JAAM_${{ inputs.release-version }}_lite.bin
          path: ${{ github.workspace }}/JAAM_${{ inputs.release-version }}_lite.bin
      - name: Copy release files to bin folder
        run: |
          mkdir -p ${{ github.workspace }}/bin/
          mkdir -p ${{ github.workspace }}/bin_beta/
          cp -f ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin/JAAM_${{ inputs.release-version }}.bin ${{ github.workspace }}/bin/${{ inputs.release-version }}.bin
          cp -f ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin/JAAM_${{ inputs.release-version }}.bin ${{ github.workspace }}/bin/latest.bin
          cp -f ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin/JAAM_${{ inputs.release-version }}.bin ${{ github.workspace }}/bin_beta/${{ inputs.release-version }}.bin
          cp -f ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin/JAAM_${{ inputs.release-version }}.bin ${{ github.workspace }}/bin_beta/latest_beta.bin
      - name: Leave only 3 recent releases
        run: |
          cd ${{ github.workspace }}/bin/
          ls -tp | grep -v '/$' | tail -n +5 | xargs -I {} rm -- {}
          cd ${{ github.workspace }}/bin_beta/
          ls -tp | grep -v '/$' | tail -n +5 | xargs -I {} rm -- {}
          cd ${{ github.workspace }}
      - name: Copy bins to flasher
        run: |
          cp -f ${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin/JAAM_${{ inputs.release-version }}.bin ${{ github.workspace }}/pages/bins/jaam.bin
          cp -f ${{ github.workspace }}/JAAM_${{ inputs.release-version }}_lite.bin/JAAM_${{ inputs.release-version }}_lite.bin ${{ github.workspace }}/pages/bins/jaam_lite.bin
      - name: Change version in flasher
        run: |
          sed -i 's/>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ JAAM [1-9]\d*(\.[1-9]\d*)*</>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ JAAM ${{ inputs.release-version }}</' ${{ github.workspace }}/pages/index.html
          sed -i 's/>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ JAAM [1-9]\d*(\.[1-9]\d*)* Lite</>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ JAAM ${{ inputs.release-version }} Lite</' ${{ github.workspace }}/pages/index.html
          sed -i 's/"version": ".*",/"version": "${{ inputs.release-version }}",/' ${{ github.workspace }}/pages/manifest.json
          sed -i 's/"version": ".*",/"version": "${{ inputs.release-version }}_lite",/' ${{ github.workspace }}/pages/manifest-lite.json
      - name: Commit changes
        id: commit_changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Release ${{ inputs.release-version }}"
          file_pattern: ${{ github.workspace }}/src/firmware/firmware.ino ${{ github.workspace }}/bin/ ${{ github.workspace }}/bin_beta/ ${{ github.workspace }}/pages/
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.workspace }}/JAAM_${{ inputs.release-version }}.bin/JAAM_${{ inputs.release-version }}.bin,${{ github.workspace }}/JAAM_${{ inputs.release-version }}_lite.bin/JAAM_${{ inputs.release-version }}_lite.bin"
          name: "${{ inputs.release-version }}: ${{ inputs.release-title }}"
          commit: ${{ steps.commit_changes.outputs.commit_hash }}
          tag: ${{ inputs.release-version }}
          generateReleaseNotes: true
          allowUpdates: true
          makeLatest: true
      - name: Merge master -> develop
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: develop
          head_to_merge: ${{ steps.commit_changes.outputs.commit_hash }}
          message: Sync Release ${{ inputs.release-version }} to develop
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Flasher to Github Pages
        uses: ./.github/workflows/.github/workflows/upload-pages
      # - name: Setup Pages
      #   uses: actions/configure-pages@v4
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: '${{ github.workspace }}/pages'
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
      - name: Update server bin list
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_SSH_USER }}
          password: ${{ secrets.SERVER_SSH_PASSWORD }}
          script: |
            cd /root/ukraine_alarm_map/deploy/
            git fetch --all
            git checkout master
            git pull
            bash redeploy_update_server.sh -s '/root/ukraine_alarm_map/bin' -sb '/root/ukraine_alarm_map/bin_beta' -m ${{ secrets.MEMCACHED_HOST }}

