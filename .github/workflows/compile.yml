  name: üèóÔ∏è Compile Firmware + Lint Check
  on:
    pull_request:
      types: [ opened, synchronize, reopened ]
      branches:
        - develop
    workflow_dispatch:
  env:
    SKETCHES_REPORTS_PATH: sketches-reports
    SKETCHES_REPORTS_ARTIFACT_NAME: sketches-reports
  jobs:
    compile_firmware:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Compile firmware
            uses: ./.github/workflows/firmware-compile
            with:
              project-folder: firmware
          - name: Copy bin file
            run: |
              cp -f ${{ github.workspace }}/firmware/.pio/build/esp32dev/firmware.bin ${{ github.workspace }}/firmware.bin
          - name: Upload firmware
            uses: actions/upload-artifact@v4
            with:
              name: firmware.bin
              path: ${{ github.workspace }}/firmware.bin
          # - name: Upload reports
          #   uses: actions/upload-artifact@v4
          #   with:
          #     name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          #     path: ${{ env.SKETCHES_REPORTS_PATH }}
    compile_firmware_lite:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Switch to LITE version
            run: |
              sed -i 's/#define LITE ./#define LITE 1/' ${{ github.workspace }}/firmware/src/Definitions.h
          - name: Compile firmware
            uses: ./.github/workflows/firmware-compile
            with:
              project-folder: firmware
          - name: Copy bin file
            run: |
              cp -f ${{ github.workspace }}/firmware/.pio/build/esp32dev/firmware.bin ${{ github.workspace }}/firmware-lite.bin
          - name: Upload firmware lite
            uses: actions/upload-artifact@v4
            with:
              name: firmware-lite.bin
              path: ${{ github.workspace }}/firmware-lite.bin
    # memory_usage_change:
    #     runs-on: ubuntu-latest
    #     permissions:
    #       contents: read
    #       pull-requests: write
    #     steps:
    #       - uses: actions/checkout@v4
    #       - name: Memory usage change
    #         uses: ./.github/workflows/firmware-compile
    #         with:
    #           enable-deltas-report: true
    #       - name: Report Delta to PR
    #         uses: arduino/report-size-deltas@v1
    compile_updater:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Compile updater
          uses: ./.github/workflows/firmware-compile
          with:
            project-folder: updater
        - name: Upload updater
          uses: actions/upload-artifact@v4
          with:
            name: updater.bin
            path: ${{ github.workspace }}/firmware/.pio/build/esp32dev/updater.bin
    # lint_check:
    #     runs-on: ubuntu-latest
    #     steps:
    #       - uses: actions/checkout@v4
    #       - name: Lint check
    #         uses: arduino/arduino-lint-action@v1
    #         with:
    #           path: ${{ github.workspace }}/firmware
    #           verbose: true
    #           compliance: specification
    #           report-file: ${{ github.workspace }}/lint-report.json
    #       - name: Upload lint report
    #         uses: actions/upload-artifact@v4
    #         with:
    #           name: lint-report
    #           path: ${{ github.workspace }}/lint-report.json
    check_flasher:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Check flasher with proof-html
            uses: anishathalye/proof-html@v2
            with:
              directory: ${{ github.workspace }}/flasher
    run_black:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Run Black in the check mode
            uses: psf/black@stable
            with:
              options: "--check --verbose --line-length 120 --target-version py312 deploy"
              src: ${{ github.workspace }}/deploy
              version: "~= 24.0"
              
